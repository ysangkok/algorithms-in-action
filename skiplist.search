$~SkipList-Search(SkipList, DataItem)#5.0
$~{
    $Initialise#5.1#Start search at the front of the list.
        Ptr = Head;#5.1.1#5.1|Start search at the front of the list.
    @
    $Find Location for DataItem#5.1.2#Search for an item in a skip list, following the longest link first, by first finding its correct location, then checking if the item is actually in that location.
        $Following Longest Links First#5.1.2.1#Long links allow us to cover the list most efficiently.
        for(level = curr_max; level>=0; level--)#5.1.2.1.1#5.1.2.1|Long links cover the list most efficiently. So start with the longest links, go as far as possible, and drop down to the next smallest link when no more progress can be made.        
        $~{#5.1.2.2
            $Find position preceeding DataItem location#5.1.2.2.1#We look in the node immediately preceeding the place where the DataItem wil be if it is in the SkipList.
                 While(Next Not at List End AND NextData < DataItem)#5.1.2.2.1.1#As long as item being searched for is less than item in list.
                 $~{#5.1.2.2.1.2
                     Advance Ptr;#5.1.2.2.1.2.1#As long as item being searched for is less than item in list.
                 @
                 }#5.1.2.2.1.3
            @
        @
        }#5.1.2.3#5.1.2|
	@
    @
    $Check if next node has DataItem#5.1.3#Once the correct place, or previous node, has been found, check whether the item is actually in the correct spot.
    $~If (NextData == DataItem)#5.1.3.1#Once the correct place, or previous node, has been found, check whether the item is actually in the correct spot.
        return FOUND#5.1.3.1.1#5.1.3|Once the correct place, or previous node, has been found, check whether the item is actually in the correct spot.
    @
    $~Else#5.1.3.2#Once the correct place, or previous node, has been found, check whether the item is actually in the correct spot.
        return NOTFOUND#5.1.3.2.1#5.1.3|Once the correct place, or previous node, has been found, check whether the item is actually in the correct spot.
    @
    @
@
}
@
