$~SkipList-Ricerca(SkipList, Elemento)#5.0
$~{
    $Inizializza#5.1#Inizia la ricerca partendo dalla testa della lista.
        Ptr = Testa;#5.1.1#5.1|Inizia la ricerca partendo dalla testa della lista.
    @
    $Trova la posizione in cui inserire l'Elemento#5.1.2#Cerca l'elemento nella SkipList, partendo dal collegamento più lungo, cercando all'inizio la sua posizione corretta, e controllando poi se l'elemento compare in quella posizione.
        $Cerca seguendo Prima i Collegamenti più Lunghi#5.1.2.1#I collegamenti lunghi ci permettono di coprire la lista in maniera più efficiente.
        for(livello = max_attuale; livello>=0; livello--)#5.1.2.1.1#5.1.2.1|I collegamenti lunghi ci permettono di coprire la lista in maniera più efficiente. Quindi partiamo dai collegamenti più lunghi, andiamo più avanti possibile, e quando non possiamo più fare ulteriori progressi passiamo ai collegamenti di lunghezza inferiore.        
        $~{#5.1.2.2
            $Trova la posizione che precede la posizione dell'Elemento#5.1.2.2.1#Cerchiamo il nodo immediatamente precedente la posizione in cui l'Elemento si troverebbe se fosse presente nella SkipList al livello attualmente in esame.
                 While(Il Successivo non è alla Fine della Lista e ElementoSuccessivo < Elemento)#5.1.2.2.1.1#Fintanto che l'elemento da inserire è minore dell'elemento della lista.
                 $~{#5.1.2.2.1.2
                     Avanza Ptr;#5.1.2.2.1.2.1#Fintanto che l'elemento da trovare è minore dell'elemento della lista, continua a spostarsi lungo la lista.
                 @
                 }#5.1.2.2.1.3
            @
        @
        }#5.1.2.3#5.1.2|
	@
    @
    $Controllo se il nodo successivo contiene l'Elemento#5.1.3#Una volta trovato il posto giusto, o il nodo precedente, controlla se l'elemento è nella giusta posizione.
    $~If (NextData == DataItem)#5.1.3.1#Una volta trovato il posto giusto, o il nodo precedente, controlla se l'elemento è nella giusta posizione.
        return TROVATO#5.1.3.1.1#5.1.3|Una volta trovato il posto giusto, o il nodo precedente, controlla se l'elemento è nella giusta posizione.
    @
    $~Else#5.1.3.2#Una volta trovato il posto giusto, o il nodo precedente, controlla se l'elemento è nella giusta posizione.
        return NONTROVATO#5.1.3.2.1#5.1.3|Una volta trovato il posto giusto, o il nodo precedente, controlla se l'elemento è nella giusta posizione.
    @
    @
@
}
@
